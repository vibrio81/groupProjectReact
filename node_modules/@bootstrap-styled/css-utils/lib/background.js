"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getBackgroundUtilities = getBackgroundUtilities;
exports.default = exports.bgFaded = exports.bgInverse = exports.bgDanger = exports.bgWarning = exports.bgInfo = exports.bgSuccess = exports.bgPrimary = exports.defaultProps = void 0;

var _backgroundVariant = require("@bootstrap-styled/css-mixins/lib/background-variant");

var defaultProps = {
  '$enable-hover-media-query': false,
  '$brand-primary': '#0275d8',
  '$brand-success': '#5cb85c',
  '$brand-info': '#5bc0de',
  '$brand-warning': '#f0ad4e',
  '$brand-danger': '#d9543f',
  '$brand-inverse': '#373a3c',
  '$gray-lightest': '#f7f7f9'
}; //
// Contextual backgrounds
//

exports.defaultProps = defaultProps;

function getBackgroundUtilities() {
  var $enableHoverMediaQuery = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultProps['$enable-hover-media-query'];
  var $brandPrimary = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultProps['$brand-primary'];
  var $brandSuccess = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultProps['$brand-success'];
  var $brandInfo = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : defaultProps['$brand-info'];
  var $brandWarning = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : defaultProps['$brand-warning'];
  var $brandDanger = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : defaultProps['$brand-danger'];
  var $brandInverse = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : defaultProps['$brand-inverse'];
  var $grayLightest = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : defaultProps['$gray-lightest'];
  return "\n    ".concat((0, _backgroundVariant.bgVariant)($enableHoverMediaQuery, '.bg-primary', $brandPrimary), "\n    ").concat((0, _backgroundVariant.bgVariant)($enableHoverMediaQuery, '.bg-success', $brandSuccess), "\n    ").concat((0, _backgroundVariant.bgVariant)($enableHoverMediaQuery, '.bg-info', $brandInfo), "\n    ").concat((0, _backgroundVariant.bgVariant)($enableHoverMediaQuery, '.bg-warning', $brandWarning), "\n    ").concat((0, _backgroundVariant.bgVariant)($enableHoverMediaQuery, '.bg-danger', $brandDanger), "\n    ").concat((0, _backgroundVariant.bgVariant)($enableHoverMediaQuery, '.bg-inverse', $brandInverse), "\n    ").concat((0, _backgroundVariant.bgVariant)($enableHoverMediaQuery, '.bg-faded', $grayLightest), "\n  ");
}

var bgPrimary = function bgPrimary($enableHoverMediaQuery) {
  var bgColor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultProps['$brand-primary'];
  return (0, _backgroundVariant.bgVariant)($enableHoverMediaQuery, '.bg-primary', bgColor);
};

exports.bgPrimary = bgPrimary;

var bgSuccess = function bgSuccess($enableHoverMediaQuery) {
  var bgColor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultProps['$brand-success'];
  return (0, _backgroundVariant.bgVariant)($enableHoverMediaQuery, '.bg-success', bgColor);
};

exports.bgSuccess = bgSuccess;

var bgInfo = function bgInfo($enableHoverMediaQuery) {
  var bgColor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultProps['$brand-info'];
  return (0, _backgroundVariant.bgVariant)($enableHoverMediaQuery, '.bg-info', bgColor);
};

exports.bgInfo = bgInfo;

var bgWarning = function bgWarning($enableHoverMediaQuery) {
  var bgColor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultProps['$brand-warning'];
  return (0, _backgroundVariant.bgVariant)($enableHoverMediaQuery, '.bg-warning', bgColor);
};

exports.bgWarning = bgWarning;

var bgDanger = function bgDanger($enableHoverMediaQuery) {
  var bgColor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultProps['$brand-danger'];
  return (0, _backgroundVariant.bgVariant)($enableHoverMediaQuery, '.bg-danger', bgColor);
};

exports.bgDanger = bgDanger;

var bgInverse = function bgInverse($enableHoverMediaQuery) {
  var bgColor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultProps['$brand-inverse'];
  return (0, _backgroundVariant.bgVariant)($enableHoverMediaQuery, '.bg-inverse', bgColor);
};

exports.bgInverse = bgInverse;

var bgFaded = function bgFaded($enableHoverMediaQuery) {
  var bgColor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultProps['$gray-lightest'];
  return (0, _backgroundVariant.bgVariant)($enableHoverMediaQuery, '.bg-faded', bgColor);
};

exports.bgFaded = bgFaded;
var _default = {
  defaultProps: defaultProps,
  getBackgroundUtilities: getBackgroundUtilities,
  bgFaded: bgFaded,
  bgPrimary: bgPrimary,
  bgSuccess: bgSuccess,
  bgInfo: bgInfo,
  bgWarning: bgWarning,
  bgDanger: bgDanger,
  bgInverse: bgInverse
};
exports.default = _default;