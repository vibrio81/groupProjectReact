"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getTextUtilities = getTextUtilities;
exports.default = exports.defaultProps = void 0;

var _breakpoints = require("@bootstrap-styled/css-mixins/lib/breakpoints");

var _textTruncate = require("@bootstrap-styled/css-mixins/lib/text-truncate");

var _textHide = require("@bootstrap-styled/css-mixins/lib/text-hide");

var _textEmphasis = require("@bootstrap-styled/css-mixins/lib/text-emphasis");

var defaultProps = {
  '$grid-breakpoints': {
    xs: '0',
    sm: '576px',
    md: '768px',
    lg: '992px',
    xl: '1200px'
  },
  '$enable-hover-media-query': false,
  '$font-weight-normal': 'normal',
  '$font-weight-bold': 'bold',
  '$text-muted': '#818a91',
  '$brand-primary': '#0275d8',
  '$brand-success': '#5cb85c',
  '$brand-info': '#5bc0de',
  '$brand-warning': '#f0ad4e',
  '$brand-danger': '#d9534f',
  '$gray-dark': '#373a3c'
};
exports.defaultProps = defaultProps;

function getTextUtilities() {
  var enableHoverMediaQuery = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultProps['$enable-hover-media-query'];
  var gridBreakpoints = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultProps['$grid-breakpoints'];
  var fontWeightNormal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultProps['$font-weight-normal'];
  var fontWeightBold = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : defaultProps['$font-weight-bold'];
  var textMuted = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : defaultProps['$text-muted'];
  var brandPrimary = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : defaultProps['$brand-primary'];
  var brandSuccess = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : defaultProps['$brand-success'];
  var brandInfo = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : defaultProps['$brand-info'];
  var brandWarning = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : defaultProps['$brand-warning'];
  var brandDanger = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : defaultProps['$brand-danger'];
  var grayDark = arguments.length > 10 && arguments[10] !== undefined ? arguments[10] : defaultProps['$gray-dark'];
  var responseAlignmentList = [];
  Object.keys(gridBreakpoints).forEach(function (bp) {
    var infix = (0, _breakpoints.breakpointInfix)(bp, gridBreakpoints);
    var responsiveAlignement = (0, _breakpoints.mediaBreakpointUp)(bp, gridBreakpoints, "\n      .text".concat(infix, "-left { text-align: left !important; }\n      .text").concat(infix, "-right  { text-align: right !important; }\n      .text").concat(infix, "-center { text-align: center !important; }\n    "));
    responseAlignmentList.push(responsiveAlignement);
  });
  return "\n    /* Text */\n\n    /* Alignment */\n\n    .text-justify        { text-align: justify !important; }\n    .text-nowrap         { white-space: nowrap !important; }\n    .text-truncate       { ".concat((0, _textTruncate.textTruncate)(), " }\n\n    /* Responsive alignment */\n\n    ").concat(responseAlignmentList.join('\n'), "\n\n    /* Transformation */\n\n    .text-lowercase      { text-transform: lowercase !important; }\n    .text-uppercase      { text-transform: uppercase !important; }\n    .text-capitalize     { text-transform: capitalize !important; }\n\n    /* Weight and italics */\n\n    .font-weight-normal  { font-weight: ").concat(fontWeightNormal, "; }\n    .font-weight-bold    { font-weight: ").concat(fontWeightBold, "; }\n    .font-italic         { font-style: italic; }\n\n    /* Contextual colors */\n\n    .text-white {\n      color: #fff !important;\n    }\n\n    ").concat((0, _textEmphasis.textEmphasisVariant)(enableHoverMediaQuery, '.text-muted', textMuted), "\n\n    ").concat((0, _textEmphasis.textEmphasisVariant)(enableHoverMediaQuery, '.text-primary', brandPrimary), "\n\n    ").concat((0, _textEmphasis.textEmphasisVariant)(enableHoverMediaQuery, '.text-success', brandSuccess), "\n\n    ").concat((0, _textEmphasis.textEmphasisVariant)(enableHoverMediaQuery, '.text-info', brandInfo), "\n\n    ").concat((0, _textEmphasis.textEmphasisVariant)(enableHoverMediaQuery, '.text-warning', brandWarning), "\n\n    ").concat((0, _textEmphasis.textEmphasisVariant)(enableHoverMediaQuery, '.text-danger', brandDanger), "\n\n    /* Font color */\n\n    ").concat((0, _textEmphasis.textEmphasisVariant)(enableHoverMediaQuery, '.text-gray-dark', grayDark), "\n\n    /* Misc */\n\n    .text-hide {\n      ").concat((0, _textHide.textHide)(), "\n    }\n\n  ");
}

var _default = {
  defaultProps: defaultProps,
  getTextUtilities: getTextUtilities
};
exports.default = _default;