"use strict";

var _lists = require("../lists");

describe('bootstrap lists mixins', function () {
  it('listUnstyled should return a css', function () {
    var css = (0, _lists.listUnstyled)();
    expect(css).not.toContain('undefined');
    expect(css).not.toContain('null');
    expect(css).toContain('padding-left: 0;');
    expect(css).toContain('list-style: none;');
  });
  it('listInlineItem should return a css', function () {
    var css = (0, _lists.listInlineItem)(_lists.defaultProps['$list-inline-padding']);
    expect(css).not.toContain('undefined');
    expect(css).not.toContain('null');
    expect(css).toContain('display: inline-block;');
    expect(css).toContain('&:not(:last-child) {');
    expect(css).toContain('margin-right: 5px;');
  });
  it('listInlineItem should have arguments', function () {
    var css = (0, _lists.listInlineItem)();
    expect(css).not.toContain('undefined');
    expect(css).not.toContain('null');
    expect(css).toContain('display: inline-block;');
    expect(css).toContain('&:not(:last-child) {');
    expect(css).toContain('margin-right: 5px');
  });
  it('listInline should return a css', function () {
    var css = (0, _lists.listInline)();
    expect(css).not.toContain('undefined');
    expect(css).not.toContain('null');
    expect(css).toContain('padding-left: 0;');
    expect(css).toContain('list-style: none;');
  });
});