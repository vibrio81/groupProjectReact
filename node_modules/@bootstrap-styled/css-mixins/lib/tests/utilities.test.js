"use strict";

var _utilities = require("../utilities");

describe('bootstrap utilities mixins', function () {
  describe('zip', function () {
    it('should zip', function () {
      expect((0, _utilities.zip)(['10px', '50px', '100px'], ['short', 'mid', 'long'])).toEqual([['10px', 'short'], ['50px', 'mid'], ['100px', 'long']]);
      expect((0, _utilities.zip)(['10px', '50px', '100px'], ['short', 'mid'])).toEqual([['10px', 'short'], ['50px', 'mid']]);
      expect((0, _utilities.zip)(['10px', '50px', '100px'], ['short', 'mid', 'long'], ['north', 'est'])).toEqual([['10px', 'short', 'north'], ['50px', 'mid', 'est']]);
    });
  });
  var utilities = new Map([['align', {
    property: 'vertical-align',
    class: 'align',
    values: ['baseline', 'top', 'middle', 'bottom', 'text-bottom', 'text-top']
  }], ['float', {
    responsive: true,
    property: 'float',
    values: ['left', 'right', 'none']
  }], ['width', {
    property: 'max-width',
    class: 'w',
    values: new Map([[25, '25%'], [50, '50%'], [75, '75%'], [100, '100%'], ['auto', 'auto']])
  }], ['max-width', {
    property: 'max-width',
    class: 'mw',
    values: new Map([[100, '100%']])
  }], ['shadow', {
    property: 'box-shadow',
    class: 'shadow',
    values: new Map([['sm', '3px'], [null, '4px'], ['lg', '5px'], ['none', 'none']])
  }], ['rounded-top', {
    property: ['border-top-left-radius', 'border-top-right-radius'],
    class: 'rounded-top',
    values: new Map([[null, '4px']])
  }], ['border', {
    property: 'border',
    values: new Map([[null, '1px solid #dee2e6'], [0, 0]])
  }], ['border-top', {
    property: 'border-top',
    values: new Map([[null, '1px solid #dee2e6'], [0, 0]])
  }], ['border-right', {
    property: 'border-right',
    values: new Map([[null, '1px solid #dee2e6'], [0, 0]])
  }], ['border-bottom', {
    property: 'border-bottom',
    values: new Map([[null, '1px solid #dee2e6'], [0, 0]])
  }], ['border-left', {
    property: 'border-left',
    values: new Map([[null, '1px solid #dee2e6'], [0, 0]])
  }]]);
  it('should generate align utility', function () {
    var css = (0, _utilities.generateUtility)(utilities.get('align'));
    expect(css).toEqual(".align-baseline {\n      vertical-align: baseline !important;\n    }\n.align-top {\n      vertical-align: top !important;\n    }\n.align-middle {\n      vertical-align: middle !important;\n    }\n.align-bottom {\n      vertical-align: bottom !important;\n    }\n.align-text-bottom {\n      vertical-align: text-bottom !important;\n    }\n.align-text-top {\n      vertical-align: text-top !important;\n    }");
  });
  it('should generate float utility', function () {
    var css = (0, _utilities.generateUtility)(utilities.get('float'), '-sm');
    expect(css).toEqual(".float-sm-left {\n      float: left !important;\n    }\n.float-sm-right {\n      float: right !important;\n    }\n.float-sm-none {\n      float: none !important;\n    }");
  });
  it('should generate shadow utility', function () {
    var css = (0, _utilities.generateUtility)(utilities.get('shadow'));
    expect(css).toEqual(".shadow-sm {\n      box-shadow: 3px !important;\n    }\n.shadow {\n      box-shadow: 4px !important;\n    }\n.shadow-lg {\n      box-shadow: 5px !important;\n    }\n.shadow-none {\n      box-shadow: none !important;\n    }");
  });
  it('should generate rounded-top utility', function () {
    var css = (0, _utilities.generateUtility)(utilities.get('rounded-top'));
    expect(css).toEqual(".rounded-top {\n      border-top-left-radius: 4px !important;\nborder-top-right-radius: 4px !important;\n    }");
  });
  it('should generate rounded-top utility with infix -print', function () {
    var css = (0, _utilities.generateUtility)(utilities.get('rounded-top'), '-print');
    expect(css).toEqual(".rounded-top-print {\n      border-top-left-radius: 4px !important;\nborder-top-right-radius: 4px !important;\n    }");
  });
  it('should generate border utility with infix -print', function () {
    var css = (0, _utilities.generateUtility)(utilities.get('border'), '-print');
    expect(css).toEqual(".border-print {\n      border: 1px solid #dee2e6 !important;\n    }\n.border-print-0 {\n      border: 0 !important;\n    }");
  });
});