"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.borderRadius = borderRadius;
exports.borderTopRadius = borderTopRadius;
exports.borderRightRadius = borderRightRadius;
exports.borderBottomRadius = borderBottomRadius;
exports.borderLeftRadius = borderLeftRadius;
exports.default = exports.defaultProps = void 0;
var defaultProps = {
  '$border-radius': '.25rem',
  '$enable-rounded': true
};
/**
 * @public
 * @description Applies border-radius if enableRounded is true.
 * @param {boolean} enableRounded
 * @param {string} radius
 * @returns {string}
 */

exports.defaultProps = defaultProps;

function borderRadius() {
  var enableRounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultProps['$enable-rounded'];
  var radius = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultProps['$border-radius'];

  if (enableRounded) {
    return "\n      border-radius: ".concat(radius, ";\n    ");
  }

  return '';
}
/**
 * @public
 * @description Applies border-radius to the top corners if enableRounded is true.
 * @param {boolean} enableRounded
 * @param {string} radius
 * @returns {string}
 */


function borderTopRadius() {
  var enableRounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultProps['$enable-rounded'];
  var radius = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultProps['$border-radius'];

  if (enableRounded) {
    return "\n      border-top-right-radius: ".concat(radius, ";\n      border-top-left-radius: ").concat(radius, ";\n    ");
  }

  return '';
}
/**
 * @public
 * @description Applies border-radius to the right corners if enableRounded is true.
 * @param {boolean} enableRounded
 * @param {string} radius
 * @returns {string}
 */


function borderRightRadius() {
  var enableRounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultProps['$enable-rounded'];
  var radius = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultProps['$border-radius'];

  if (enableRounded) {
    return "\n      border-bottom-right-radius: ".concat(radius, ";\n      border-top-right-radius: ").concat(radius, ";\n    ");
  }

  return '';
}
/**
 * @public
 * @description Applies border-radius to the bottom corners if enableRounded is true.
 * @param {boolean} enableRounded
 * @param {string} radius
 * @returns {string}
 */


function borderBottomRadius() {
  var enableRounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultProps['$enable-rounded'];
  var radius = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultProps['$border-radius'];

  if (enableRounded) {
    return "\n      border-bottom-right-radius: ".concat(radius, ";\n      border-bottom-left-radius: ").concat(radius, ";\n    ");
  }

  return '';
}
/**
 * @public
 * @description Applies border-radius to the left corners if enableRounded is true.
 * @param {boolean} enableRounded
 * @param {string} radius
 * @returns {string}
 */


function borderLeftRadius() {
  var enableRounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultProps['$enable-rounded'];
  var radius = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultProps['$border-radius'];

  if (enableRounded) {
    return "\n      border-bottom-left-radius: ".concat(radius, ";\n      border-top-left-radius: ").concat(radius, ";\n    ");
  }

  return '';
}

var _default = {
  defaultProps: defaultProps,
  all: borderRadius,
  top: borderTopRadius,
  right: borderRightRadius,
  bottom: borderBottomRadius,
  left: borderLeftRadius
};
exports.default = _default;